[파이썬 게임 Tic Tac Toe 제작 실습 질의]

프로젝트 폴더명 : Tic_Tac_Toe_Game

1단계: 텍스트 기반 기본 게임
텍스트 기반의 2인용 Tic Tac Toe 게임을 파이썬으로 만들어줘.
보드는 콘솔에 출력되고, 사용자는 좌표를 입력해 X와 O를 번갈아 두도록 해줘.

2단계: 사용자 vs AI 컴퓨터
기존 텍스트 기반 Tic Tac Toe 게임을 수정해서, 사용자가 X, 컴퓨터가 O를 두도록 바꿔줘.
컴퓨터는 랜덤으로 빈 칸에 수를 두도록 해줘.

3단계: AI 전략 개선 (간단한 룰 적용)
컴퓨터가 랜덤이 아니라 간단한 전략을 사용하도록 개선해줘.
예를 들어, 이길 수 있는 자리가 있으면 그곳을 두고, 막아야 할 자리가 있으면 막도록 해줘.

4단계: 게임 승패/무승부 판정 강화
게임이 끝났을 때, 승리자 또는 무승부 여부를 출력하도록 코드를 개선해줘.
게임이 끝나면 다시 시작할 수 있도록 해줘.

5단계: 코드 구조화 (함수 분리)
현재 코드를 함수 단위로 구조화해줘.
예: print_board(), check_winner(), player_move(), computer_move() 등으로 나눠줘.

6단계: 클래스 기반 리팩토링
지금까지 만든 Tic Tac Toe 게임을 클래스(TicTacToe)로 리팩토링해줘.
메서드로 보드 출력, 수 두기, 승패 판정 등을 구현하고 play() 메서드로 게임이 진행되도록 해줘.

7단계: 간단한 GUI (Tkinter)
지금까지 만든 Tic Tac Toe를 Tkinter GUI로 만들어줘.
3x3 버튼으로 보드를 표시하고, 사용자가 클릭하면 X가 표시되고, 이후 컴퓨터가 O를 두도록 해줘.


8단계: GUI 개선 – 게임 종료 메시지
Tkinter GUI 버전에 게임 종료 시 팝업 메시지를 띄우도록 해줘.
예: ‘사용자 승리’, ‘컴퓨터 승리’, ‘무승부’ 등 메시지를 보여주고 게임을 다시 시작할 수 있도록 해줘.

9단계: GUI 디자인 개선
Tkinter GUI에 색상과 버튼 크기를 조정해서 보기 좋게 디자인해줘.
X는 파란색, O는 빨간색으로 표시해줘.

( 추가 질의 예시: 게임 화면 하단이 잘려서 나와. 소스 수정해줘)

10단계: 고급 AI (Minimax 알고리즘)
GUI 버전에 적용할 수 있도록 Minimax 알고리즘을 사용한 AI를 만들어줘.
컴퓨터가 최적의 수를 두도록 해줘.

11단계:  Minimax 알고리즘이 뭐야?